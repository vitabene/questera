(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// questera

var HERO = {
  name: "Vita", craft: "Mage", avatar: "assets/hero.png"
};

var QUESTS = [
  {name: 'Build questera', type: 'Building', done: false, created: '1443601842862'},
  {name: 'Learn More About React', type: 'Exploration', done: false, created: '1443601842863'},
  {name: 'Angularize Learn', type: 'Building', done: false, created: '1443601842864'},
  {name: 'Learn More About Wordpress', type: 'Exploration', done: false, created: '1443601842865'},
  {name: 'Improve Mapper Script', type: 'Building', done: false, created: '1443601842866'},
  {name: 'Learn More About Laravel', type: 'Exploration', done: false, created: '1443601842867'}
];

var MAPOBJECTS = [
  {id: '1', type: 'Camp', visited: false, created: '1443601842862'}
];

var Map = React.createClass({displayName: "Map",
  componentWillMount: function() {
    var httpRequest = new XMLHttpRequest();
    httpRequest.onreadystatechange = function(){
      if (httpRequest.readyState === 4) {
        if (httpRequest.status === 200) {
          var map = JSON.parse(httpRequest.responseText);
          console.log(map);
        } else {
          console.error('There was a problem with the request.');
        }
      }
    };
    httpRequest.open('GET', 'assets/map.json', true);
    httpRequest.send(null);
  },
  render: function() {
    var rows = [];
    // this.props.quests.forEach(function(quest) {
    //     rows.push(<MapQuest quest={quest} key={quest.name}/>);
    // });
    // this.props.mapobjects.forEach(function(object) {
    //     rows.push(<MapObject object={object} key={object.name}/>);
    // });
    return (
      React.createElement("table", {className: "map", id: "map"}, 
        rows
      )
    );
  }
});

var MapObject = React.createClass({displayName: "MapObject",
  render: function() {
    return (
      React.createElement("div", {className: this.props.object.type}, 
        this.props.object.type
      )
    );
  }
});

var Hero = React.createClass({displayName: "Hero",
  render: function() {
    return (
      React.createElement("div", {className: "hero", id: "hero"}, 
        React.createElement("img", {src: this.props.hero.avatar, className: "hero__avatar", alt: "Hero"}), 
        React.createElement("h1", {className: "hero__name"}, this.props.hero.name), 
        React.createElement("h2", {className: "hero__craft"}, this.props.hero.craft)
      )
    );
  }
});

var Heroboard = React.createClass({displayName: "Heroboard",
  render: function() {
    return (
      React.createElement("div", {className: "heroboard", id: "heroboard"}, 
        React.createElement(Hero, {hero: this.props.hero, key: this.props.hero.name})
      )
    );
  }
});

var Quest = React.createClass({displayName: "Quest",
  render: function() {
    return (
      React.createElement("div", {className: "quest"}, 
        React.createElement("img", {className: "quest__image image", src: "assets/" + this.props.quest.type.toLowerCase() + ".png"}), 
        React.createElement("span", {className: "quest__name"}, this.props.quest.name)
      )
    );
  }
});

var MapQuest = React.createClass({displayName: "MapQuest",
  render: function() {
    return (
      React.createElement("div", {className: "map-quest"}, 
        React.createElement("img", {className: this.props.quest.type, alt: this.props.quest.name})
      )
    );
  }
});

var QuestField = React.createClass({displayName: "QuestField",
  render: function() {
    return (
      React.createElement("div", {className: "quest-field-box"}, 
        React.createElement("input", {className: "quest-field", id: "questField"})
      )
    );
  }
});

var Questboard = React.createClass({displayName: "Questboard",
  render: function() {
    var rows = [];
    this.props.quests.forEach(function(quest) {
        rows.push(React.createElement(Quest, {quest: quest, key: quest.name}));
    });
    return (
      React.createElement("div", {className: "questboard", id: "questboard"}, 
      React.createElement(QuestField, null), 
        rows
      )
    );
  }
});

var Game = React.createClass({displayName: "Game",
  render: function(){
    return (
      React.createElement("div", null, 
        React.createElement(Heroboard, {hero: this.props.hero}), 
        React.createElement(Map, {quests: this.props.quests, mapobjects: this.props.mapobjects}), 
        React.createElement(Questboard, {quests: this.props.quests})
      )
    );
  }
});

React.render(React.createElement(Game, {quests: QUESTS, mapobjects: MAPOBJECTS, hero: HERO}), document.getElementById('game'));


},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
